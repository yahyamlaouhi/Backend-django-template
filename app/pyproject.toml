[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Admin <admin@example.com>"]

[tool.poetry.dependencies]
python = "^3.10"
Django = "^3.2" 
django-filter = "^22.1"
psycopg2 = ">=2.9.0,<2.9.2"
Pillow = "^8.4.0"
uwsgi = "^2.0.18"
boto3 = "^1.20.26"
django-cors-headers = "^3.10.1"
django-prometheus = "^2.2.0"
django-address = "^0.2.6"
djangorestframework = ">=3.12.0,<3.13.0"
drf-yasg = "^1.21.4"
email-validator = "^2.1.0.post1"
tenacity = "^8.2.3"
pyjwt = "^2.8.0"
djangorestframework-simplejwt = "^5.3.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
mypy = "^1.8.0"
ruff = "^0.2.2"
pre-commit = "^3.6.2"
types-passlib = "^1.7.7.20240106"
coverage = "^7.4.3"
black = "^22.3.0"
Faker = "^12.0.0"
django-stubs = "^5.0.2"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "migrations", "static"]

[tool.ruff]
target-version = "py310"
exclude = ["migrations", "static"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true
